import 'package:flutter/material.dart';
import 'package:shop_ke/core/services/app_services/date_time_service.dart';

class Order {
  String orderId;
  String userId;
  String orderStatus;
  String createdAt;
  double _orderTotal;
  DateTimeService _timeService = new DateTimeService();

  static const String Pending = "Pending";
  static const String Cancelled = "Cancelled";
  static const String Complete = "Complete";

  Order({
    this.orderId, //Autogenerated in the backend
    this.orderStatus = Pending, //Has default value when placing order
    @required this.userId,
  }) {
    this.createdAt = _timeService.utc;
  }

  Order.fromMap(Map<String, dynamic> map) {
    orderId = map['orderId'];
    userId = map['userId'];
    createdAt = _timeService.getDate(map['createdAt']);
    orderStatus = map['orderStatus'];
    orderTotal = map['orderTotal'];
  }

  Map<String, dynamic> toMap() {
    return {
      'userId': userId,
      'createdAt': createdAt,
      'orderStatus': orderStatus,
      'orderTotal': orderTotal,
    };
  }

  set orderTotal(var value) {
    switch (value.runtimeType) {
      case int:
        int orderTotal = value;
        _orderTotal = orderTotal.toDouble();
        break;

      case double:
        _orderTotal = value;
        break;

      default:
        throw new Exception('[set orderTotal] Order total is a ${value.runtimeType} not double or int');
        break;
    }

    return value;
  }

  double get orderTotal => _orderTotal;
}
